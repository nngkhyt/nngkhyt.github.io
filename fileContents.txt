[ファイル構成]

nngkhyt.github.io/
|-----contentsWriter.py
|-----fileContents.txt
|-----index.html
|-----links.html
|-----news.html
|-----profile.html
|-----README.md
-----.git/
| |-----COMMIT_EDITMSG
| |-----config
| |-----description
| |-----FETCH_HEAD
| |-----HEAD
| |-----index
| |-----packed-refs
| |-----sourcetreeconfig.json
| -----hooks/
| | |-----applypatch-msg.sample
| | |-----commit-msg.sample
| | |-----fsmonitor-watchman.sample
| | |-----post-update.sample
| | |-----pre-applypatch.sample
| | |-----pre-commit.sample
| | |-----pre-merge-commit.sample
| | |-----pre-push.sample
| | |-----pre-rebase.sample
| | |-----pre-receive.sample
| | |-----prepare-commit-msg.sample
| | |-----push-to-checkout.sample
| | |-----sendemail-validate.sample
| | |-----update.sample
| -----info/
| | |-----exclude
| -----logs/
| | |-----HEAD
| | -----refs/
| | | -----heads/
| | | | |-----main
| | | -----remotes/
| | | | -----origin/
| | | | | |-----HEAD
| | | | | |-----main
| -----objects/
| | -----0c/
| | | |-----ed0a5a5598e8d144941703710d5ab3d3ddc138
| | -----13/
| | | |-----ffa486cb5efbe6db0a50058c7b352806f44970
| | -----16/
| | | |-----02945cb9f220c0dd63aaa98ee28c2f380f3d10
| | -----17/
| | | |-----6266e2036c833d41d3492ce4959d549e849c38
| | -----25/
| | | |-----c54c8eafdc3572e66aeb0342cb9a2d2edf9173
| | -----49/
| | | |-----4d0de42a6bc6ed562a7a7238a478a0297b9668
| | -----5b/
| | | |-----5d5f24efae777b3382acc15096e65a51c0454d
| | -----5e/
| | | |-----79a3460899b9a05fa062298bcf183d5e752fdc
| | -----5f/
| | | |-----58fc952d430aeba257db3ea90ec946505e5243
| | -----6c/
| | | |-----f4901ddcc5f3c6da1681f7200597e6f7d98179
| | -----75/
| | | |-----97bf690a2675adf646830604d2fd512464d744
| | -----7e/
| | | |-----5c3ba665f2009df2d94b294cd5e16ea30e05c1
| | -----85/
| | | |-----422080f5e74798f84074889f3139f134bbfe26
| | -----8f/
| | | |-----62c8719430c62fbb843b2f4c5f102c29b822c0
| | | |-----9920b49ddbd22386403093320639c031fd07ba
| | -----94/
| | | |-----f6f89deb494670141a1586987010880141aed9
| | -----c2/
| | | |-----7c930ff7400dd90f8fa0ecbaa0e24c047169ce
| | -----c7/
| | | |-----43a9e908385f7128c56e29285fa9e946addb67
| | -----d7/
| | | |-----7833dd9f9c256e091ac30e07d097503cdffe67
| | -----e9/
| | | |-----b71ad358634d13a338ad06ab97edbea7dc513b
| | -----ef/
| | | |-----c14a79a401f4307697ba42bcf51fe569656486
| | -----info/
| | -----pack/
| | | |-----pack-213a98ca9ff9252cdb03426143e4dedd95defaa4.idx
| | | |-----pack-213a98ca9ff9252cdb03426143e4dedd95defaa4.pack
| | | |-----pack-213a98ca9ff9252cdb03426143e4dedd95defaa4.rev
| -----refs/
| | -----heads/
| | | |-----main
| | -----remotes/
| | | -----origin/
| | | | |-----HEAD
| | | | |-----main
| | -----tags/
-----css/
| |-----styles.css
-----images/
| -----hero/
| | |-----odaiba_TOKYO.jpg
| -----profile/
| | |-----nngkhyt_300x300.jpg
-----js/
| |-----scripts.js
-----news/
| |-----news_1.html
| |-----news_2.html


[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\index.html]

	<!DOCTYPE html>
	<html lang="ja">
	<head>
	    <meta charset="UTF-8">
	    <meta name="viewport" content="width=device-width, initial-scale=1.0">
	    <title>Home</title>
	    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
	    <link rel="stylesheet" href="css/styles.css">
	</head>
	<body>
	    <header class="bg-dark text-white text-center py-3">
	        <h1>My Static Website</h1>
	        <nav>
	            <ul class="nav justify-content-center">
	                <li class="nav-item"><a class="nav-link text-white" href="index.html">Home</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="news.html">News</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="profile.html">Profile</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="links.html">Link</a></li>
	            </ul>
	        </nav>
	    </header>
	    <section class="hero text-white text-center py-5">
	        <div class="container">
	            <h2>Welcome to nngkhyt blog</h2>
	            <p>Latest news and articles at your fingertips.</p>
	        </div>
	    </section>
	    <section class="recent-news py-5">
	        <div class="container">
	            <h2 class="text-center mb-4">Recent News</h2>
	            <div class="row">
	                <div class="col-md-4">
	                    <div class="card mb-4 shadow-sm">
	                        <div class="card-body">
	                            <h5 class="card-title">News 1</h5>
	                            <p class="card-text">Summary of news 1...</p>
	                            <a href="news/news_1.html" class="btn btn-primary">Read More</a>
	                        </div>
	                    </div>
	                </div>
	                <div class="col-md-4">
	                    <div class="card mb-4 shadow-sm">
	                        <div class="card-body">
	                            <h5 class="card-title">News 2</h5>
	                            <p class="card-text">Summary of news 2...</p>
	                            <a href="news/news_2.html" class="btn btn-primary">Read More</a>
	                        </div>
	                    </div>
	                </div>
	            </div>
	        </div>
	    </section>
	    <section class="featured py-5 bg-light">
	        <div class="container">
	            <h2 class="text-center mb-4">Featured Articles</h2>
	            <div class="row">
	                <div class="col-md-4">
	                    <div class="card mb-4 shadow-sm">
	                        <div class="card-body">
	                            <h5 class="card-title">Featured 1</h5>
	                            <p class="card-text">Summary of featured article 1...</p>
	                            <a href="#" class="btn btn-primary">Read More</a>
	                        </div>
	                    </div>
	                </div>
	                <div class="col-md-4">
	                    <div class="card mb-4 shadow-sm">
	                        <div class="card-body">
	                            <h5 class="card-title">Featured 2</h5>
	                            <p class="card-text">Summary of featured article 2...</p>
	                            <a href="#" class="btn btn-primary">Read More</a>
	                        </div>
	                    </div>
	                </div>
	            </div>
	        </div>
	    </section>
	    <section class="sitemap py-5">
	        <div class="container">
	            <h2 class="text-center mb-4">Sitemap</h2>
	            <ul class="list-group list-group-flush">
	                <li class="list-group-item"><a href="index.html">Home</a></li>
	                <li class="list-group-item"><a href="news.html">News</a></li>
	                <li class="list-group-item"><a href="profile.html">Profile</a></li>
	                <li class="list-group-item"><a href="links.html">Link</a></li>
	            </ul>
	        </div>
	    </section>
	    <footer class="bg-dark text-white text-center py-3">
	        <p>&copy; 2024 My Static Website</p>
	    </footer>
	    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
	    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
	    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
	</body>
	</html>



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\links.html]

	<!DOCTYPE html>
	<html lang="ja">
	<head>
	    <meta charset="UTF-8">
	    <meta name="viewport" content="width=device-width, initial-scale=1.0">
	    <title>Links</title>
	    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
	    <link rel="stylesheet" href="css/styles.css">
	</head>
	<body>
	    <header class="bg-dark text-white text-center py-3">
	        <h1>Links</h1>
	        <nav>
	            <ul class="nav justify-content-center">
	                <li class="nav-item"><a class="nav-link text-white" href="index.html">Home</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="news.html">News</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="profile.html">Profile</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="links.html">Link</a></li>
	            </ul>
	        </nav>
	    </header>
	    <section class="links py-5">
	        <div class="container">
	            <h2 class="text-center mb-4">Useful Links</h2>
	            <div class="row">
	                <div class="col-md-6 mb-4">
	                    <div class="card shadow-sm">
	                        <div class="card-body">
	                            <h5 class="card-title">Example Link 1</h5>
	                            <p class="card-text">Brief description about the link...</p>
	                            <a href="https://example.com" class="btn btn-primary">Visit</a>
	                        </div>
	                    </div>
	                </div>
	                <div class="col-md-6 mb-4">
	                    <div class="card shadow-sm">
	                        <div class="card-body">
	                            <h5 class="card-title">Example Link 2</h5>
	                            <p class="card-text">Brief description about the link...</p>
	                            <a href="https://example.com" class="btn btn-primary">Visit</a>
	                        </div>
	                    </div>
	                </div>
	                <!-- Add more link cards as needed -->
	            </div>
	        </div>
	    </section>
	    <footer class="bg-dark text-white text-center py-3">
	        <p>&copy; 2024 My Static Website</p>
	    </footer>
	    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
	    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
	    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
	</body>
	</html>



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\news.html]

	<!DOCTYPE html>
	<html lang="ja">
	<head>
	    <meta charset="UTF-8">
	    <meta name="viewport" content="width=device-width, initial-scale=1.0">
	    <title>News</title>
	    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
	    <link rel="stylesheet" href="css/styles.css">
	</head>
	<body>
	    <header class="bg-dark text-white text-center py-3">
	        <h1>News</h1>
	        <nav>
	            <ul class="nav justify-content-center">
	                <li class="nav-item"><a class="nav-link text-white" href="index.html">Home</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="news.html">News</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="profile.html">Profile</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="links.html">Link</a></li>
	            </ul>
	        </nav>
	    </header>
	    <section class="news-search py-5">
	        <div class="container">
	            <h2 class="text-center mb-4">Search News</h2>
	            <form class="form-inline justify-content-center">
	                <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
	                <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
	            </form>
	        </div>
	    </section>
	    <section class="news-tags py-5">
	        <div class="container">
	            <h2 class="text-center mb-4">Tags</h2>
	            <div class="row justify-content-center">
	                <button class="btn btn-outline-secondary m-2" onclick="filterNewsByTag('All')">All</button>
	                <button class="btn btn-outline-secondary m-2" onclick="filterNewsByTag('Tag1')">Tag1</button>
	                <button class="btn btn-outline-secondary m-2" onclick="filterNewsByTag('Tag2')">Tag2</button>
	                <button class="btn btn-outline-secondary m-2" onclick="filterNewsByTag('Tag3')">Tag3</button>
	            </div>
	        </div>
	    </section>
	    <section class="news-list py-5">
	        <div class="container">
	            <h2 class="text-center mb-4">News List</h2>
	            <div class="row">
	                <div class="col-md-4 news-item" data-tags="Tag1 Tag2" data-date="2024-06">
	                    <div class="card mb-4 shadow-sm">
	                        <div class="card-body">
	                            <h5 class="card-title">News 1</h5>
	                            <p class="card-text">Summary of news 1...</p>
	                            <a href="news/news_1.html" class="btn btn-primary">Read More</a>
	                            <div class="mt-2">
	                                <span class="badge badge-secondary">Tag1</span>
	                                <span class="badge badge-secondary">Tag2</span>
	                            </div>
	                            <div class="mt-2">
	                                <small class="text-muted">Date: 2024-06-02</small>
	                            </div>
	                        </div>
	                    </div>
	                </div>
	                <div class="col-md-4 news-item" data-tags="Tag1 Tag3" data-date="2024-05">
	                    <div class="card mb-4 shadow-sm">
	                        <div class="card-body">
	                            <h5 class="card-title">News 2</h5>
	                            <p class="card-text">Summary of news 2...</p>
	                            <a href="news/news_2.html" class="btn btn-primary">Read More</a>
	                            <div class="mt-2">
	                                <span class="badge badge-secondary">Tag1</span>
	                                <span class="badge badge-secondary">Tag3</span>
	                            </div>
	                            <div class="mt-2">
	                                <small class="text-muted">Date: 2024-05-15</small>
	                            </div>
	                        </div>
	                    </div>
	                </div>
	                <!-- Add more news items as needed -->
	            </div>
	        </div>
	    </section>
	    <section class="news-archive py-5 bg-light">
	        <div class="container">
	            <h2 class="text-center mb-4">News Archive</h2>
	            <ul class="list-group list-group-flush">
	                <li class="list-group-item"><a href="#" onclick="filterNewsByDate('2024-06')">June 2024</a></li>
	                <li class="list-group-item"><a href="#" onclick="filterNewsByDate('2024-05')">May 2024</a></li>
	                <li class="list-group-item"><a href="#" onclick="filterNewsByDate('2024-04')">April 2024</a></li>
	            </ul>
	        </div>
	    </section>
	    <footer class="bg-dark text-white text-center py-3">
	        <p>&copy; 2024 My Static Website</p>
	    </footer>
	    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
	    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
	    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
	    <script src="js/scripts.js"></script>
	</body>
	</html>



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\profile.html]

	<!DOCTYPE html>
	<html lang="ja">
	<head>
	    <meta charset="UTF-8">
	    <meta name="viewport" content="width=device-width, initial-scale=1.0">
	    <title>Profile</title>
	    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
	    <link rel="stylesheet" href="css/styles.css">
	</head>
	<body>
	    <header class="bg-dark text-white text-center py-3">
	        <h1>Profile</h1>
	        <nav>
	            <ul class="nav justify-content-center">
	                <li class="nav-item"><a class="nav-link text-white" href="index.html">Home</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="news.html">News</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="profile.html">Profile</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="links.html">Link</a></li>
	            </ul>
	        </nav>
	    </header>
	    <section class="profile py-5">
	        <div class="container">
	            <h2 class="text-center mb-4">プロフィール</h2>
	            <div class="row">
	                <div class="col-md-4 text-center">
	                    <img src=".\images\profile\nngkhyt_300x300.jpg" alt="Profile Photo" class="img-fluid rounded-circle mb-3 shadow">
	                </div>
	                <div class="col-md-8">
	                    <h3>Hayato Nonogaki / 野々垣 颯人</h3>
	                    <h4 class="mt-4">経歴</h4>
	                    <ul class="list-group list-group-flush mb-4">
	                        <li class="list-group-item">2015年4月 岐阜工業高等専門学校 電子制御工学科 入学</li>
	                        <li class="list-group-item">2020年3月 岐阜工業高等専門学校 電子制御工学科 卒業</li>
	                        <li class="list-group-item">2020年4月 東京農工大学 工学部 電気電子工学科 編入学</li>
	                        <li class="list-group-item">2022年3月 東京農工大学 工学部 電気電子工学科 卒業</li>
	                        <li class="list-group-item">2022年4月 東京農工大学 工学府 電気電子工学専攻 入学</li>
	                        <li class="list-group-item">2024年3月 東京農工大学 工学府 電気電子工学専攻 修了</li>
	                        <li class="list-group-item">2024年4月 ITエンジニアとして就職</li>
	                    </ul>
	                    <h4 class="mt-4">趣味・興味</h4>
	                    <ul class="list-group list-group-flush mb-4">
	                        <li class="list-group-item">野球観戦</li>
	                        <li class="list-group-item">旅行</li>
	                        <li class="list-group-item">美味しいものを食べること</li>
	                        <li class="list-group-item">ソフトテニス</li>
	                    </ul>
	                    <h4 class="mt-4">Skills</h4>
	                    <ul class="list-group list-group-flush mb-4">
	                        <li class="list-group-item">Python</li>
	                        <li class="list-group-item">C</li>
	                        <li class="list-group-item">HTML&CSS (少しだけ)</li>
	                    </ul>
	                    <h4 class="mt-4">研究活動</h4>
	                    <h5>論文</h5>
	                    <ul class="list-group list-group-flush mb-4">
	                        <li class="list-group-item"><a href='https://ieeexplore.ieee.org/document/10473674' target="_blank">Brillouin frequency shift estimation for Brillouin optical time domain analysis using Brillouin gain and loss spectra with SVC, Hayato Nonogaki, Kazuki Hoshino, Daiki Saito, Mohd Saiful Dzulkefly Bin Zan, Yosuke Tanaka IEEE Sensors Journal 24(9) 14261-14269 2024年5月1日</a></li>
	                        <li class="list-group-item"><a href='https://iopscience.iop.org/article/10.35848/1882-0786/ad422f' target="_blank">Brillouin frequency shift measurement by zero-crossing point search in virtually synthesized spectra of Brillouin gain and loss, Hayato Nonogaki, Daichi Sei, Mohd Saiful Dzulkefly Zan, Yosuke Tanaka Applied Physics Express 17(5) 052003-052003 2024年5月15日</a></li>
	                    </ul>
	                    <h5>口頭発表</h5>
	                    <ul class="list-group list-group-flush mb-4">
	                        <li class="list-group-item"><a href='https://opg.optica.org/abstract.cfm?uri=Sensors-2022-SM2C.6' target="_blank">Distributed strain sensing with simple system based on slope-assisted BOTDA using both gain and loss spectra, Hayato Nonogaki, Daiki Saito, Kazuki Hoshino, Yosuke Tanaka, Optical Sensors and Sensing Congress 2022年7月11日</a></li>
	                        <li class="list-group-item"><a href='https://pub.confit.atlas.jp/ja/event/jsap2023a/presentation/23p-A308-5' target="_blank">ブリルアン利得・損失スペクトルを用いたサポートベクタ分類によるブリルアン周波数シフトの推定, 野々垣 颯人, 清 大地, 田中 洋介 第84回応用物理学会秋季学術講演会 2023年9月23日</a></li>
	                        <li class="list-group-item"><a href='https://ken.ieice.org/ken/paper/202310123CXk/' target="_blank">ブリルアン利得と損失の仮想合成スペクトルのゼロクロス点探索によるブリルアン周波数シフト測定, 野々垣 颯人, 清 大地, Mohd Saiful Dzulkefly Bin Zan, 田中洋介 電子情報通信学会 光ファイバ応用技術研究会（OFT） 2023年10月12日</a></li>
	                        <li class="list-group-item"><a href='https://opg.optica.org/abstract.cfm?uri=OFS-2023-Tu3.85' target="_blank">Fast Brillouin frequency shift measurement by zero-crossing point search in the virtually composed spectra of Brillouin gain and loss, Hayato Nonogaki, Daichi Sei, Mohd Saiful Dzulkefly Bin Zan, Yosuke Tanaka 28-th International Conference on Optical Fiber Sensors (OFS-28) 2023年11月21日</a></li>
	                    </ul>
	                    <h4 class="mt-4">お問い合わせ</h4>
	                    <p><a href="https://forms.gle/iX57GcxcSSSLzFdJ7" class="btn btn-primary">Google Form</a></p>
	                    
	                </div>
	            </div>
	        </div>
	    </section>
	    <footer class="bg-dark text-white text-center py-3">
	        <p>&copy; 2024 nngkhyt blog</p>
	    </footer>
	    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
	    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
	    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
	</body>
	</html>



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\README.md]

	# nngkhyt.github.io


[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\COMMIT_EDITMSG]

	upload original files



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\config]

	[core]
		repositoryformatversion = 0
		filemode = false
		bare = false
		logallrefupdates = true
		symlinks = false
		ignorecase = true
	[remote "origin"]
		url = https://github.com/nngkhyt/nngkhyt.github.io.git
		fetch = +refs/heads/*:refs/remotes/origin/*
	[branch "main"]
		remote = origin
		merge = refs/heads/main



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\description]

	Unnamed repository; edit this file 'description' to name the repository.



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\FETCH_HEAD]

	5e79a3460899b9a05fa062298bcf183d5e752fdc		branch 'main' of https://github.com/nngkhyt/nngkhyt.github.io



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\HEAD]

	ref: refs/heads/main



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\packed-refs]

	# pack-refs with: peeled fully-peeled sorted 
	9ba906a138b2ceff3b02f13536c39876629203b6 refs/remotes/origin/main



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\sourcetreeconfig.json]

	{
	  "$id": "41",
	  "AutoRefresh": true,
	  "AutoRefreshRemotes": true,
	  "CommitTextLinks": null,
	  "DraftCommitMsg": "",
	  "IncomingSavedCount": 0,
	  "LastCheckedRemotes": "2024-06-02T16:22:06.7040838+09:00",
	  "LastUsedView": 1,
	  "LogBranchFilterIndex": 0,
	  "OutgoingSavedCount": 0,
	  "SidebarExpandedItems": [
	    "ブランチ"
	  ],
	  "SidebarWidth": 210.0,
	  "SubtreeLinks": [],
	  "NeedsLargeFilesPull": false,
	  "RemoteProjectLinks": [
	    {
	      "$id": "42",
	      "BaseUrl": "https://github.com",
	      "Identifier": "nngkhyt/nngkhyt.github.io",
	      "RemoteName": "origin",
	      "Type": 0,
	      "Username": "nngkhyt",
	      "CloneUrl": null,
	      "ProjectUrl": null,
	      "AccountId": "nngkhyt@github.com",
	      "AvatarUrl": null,
	      "DisplayName": "origin: https://github.com"
	    }
	  ]
	}


[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\applypatch-msg.sample]

	#!/bin/sh
	#
	# An example hook script to check the commit log message taken by
	# applypatch from an e-mail message.
	#
	# The hook should exit with non-zero status after issuing an
	# appropriate message if it wants to stop the commit.  The hook is
	# allowed to edit the commit message file.
	#
	# To enable this hook, rename this file to "applypatch-msg".
	
	. git-sh-setup
	commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
	test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
	:



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\commit-msg.sample]

	#!/bin/sh
	#
	# An example hook script to check the commit log message.
	# Called by "git commit" with one argument, the name of the file
	# that has the commit message.  The hook should exit with non-zero
	# status after issuing an appropriate message if it wants to stop the
	# commit.  The hook is allowed to edit the commit message file.
	#
	# To enable this hook, rename this file to "commit-msg".
	
	# Uncomment the below to add a Signed-off-by line to the message.
	# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
	# hook is more suited to it.
	#
	# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
	# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
	
	# This example catches duplicate Signed-off-by lines.
	
	test "" = "$(grep '^Signed-off-by: ' "$1" |
		 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
		echo >&2 Duplicate Signed-off-by lines.
		exit 1
	}



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\fsmonitor-watchman.sample]

	#!/usr/bin/perl
	
	use strict;
	use warnings;
	use IPC::Open2;
	
	# An example hook script to integrate Watchman
	# (https://facebook.github.io/watchman/) with git to speed up detecting
	# new and modified files.
	#
	# The hook is passed a version (currently 2) and last update token
	# formatted as a string and outputs to stdout a new update token and
	# all files that have been modified since the update token. Paths must
	# be relative to the root of the working tree and separated by a single NUL.
	#
	# To enable this hook, rename this file to "query-watchman" and set
	# 'git config core.fsmonitor .git/hooks/query-watchman'
	#
	my ($version, $last_update_token) = @ARGV;
	
	# Uncomment for debugging
	# print STDERR "$0 $version $last_update_token\n";
	
	# Check the hook interface version
	if ($version ne 2) {
		die "Unsupported query-fsmonitor hook version '$version'.\n" .
		    "Falling back to scanning...\n";
	}
	
	my $git_work_tree = get_working_dir();
	
	my $retry = 1;
	
	my $json_pkg;
	eval {
		require JSON::XS;
		$json_pkg = "JSON::XS";
		1;
	} or do {
		require JSON::PP;
		$json_pkg = "JSON::PP";
	};
	
	launch_watchman();
	
	sub launch_watchman {
		my $o = watchman_query();
		if (is_work_tree_watched($o)) {
			output_result($o->{clock}, @{$o->{files}});
		}
	}
	
	sub output_result {
		my ($clockid, @files) = @_;
	
		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# binmode $fh, ":utf8";
		# print $fh "$clockid\n@files\n";
		# close $fh;
	
		binmode STDOUT, ":utf8";
		print $clockid;
		print "\0";
		local $, = "\0";
		print @files;
	}
	
	sub watchman_clock {
		my $response = qx/watchman clock "$git_work_tree"/;
		die "Failed to get clock id on '$git_work_tree'.\n" .
			"Falling back to scanning...\n" if $? != 0;
	
		return $json_pkg->new->utf8->decode($response);
	}
	
	sub watchman_query {
		my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
		or die "open2() failed: $!\n" .
		"Falling back to scanning...\n";
	
		# In the query expression below we're asking for names of files that
		# changed since $last_update_token but not from the .git folder.
		#
		# To accomplish this, we're using the "since" generator to use the
		# recency index to select candidate nodes and "fields" to limit the
		# output to file names only. Then we're using the "expression" term to
		# further constrain the results.
		my $last_update_line = "";
		if (substr($last_update_token, 0, 1) eq "c") {
			$last_update_token = "\"$last_update_token\"";
			$last_update_line = qq[\n"since": $last_update_token,];
		}
		my $query = <<"	END";
			["query", "$git_work_tree", {$last_update_line
				"fields": ["name"],
				"expression": ["not", ["dirname", ".git"]]
			}]
		END
	
		# Uncomment for debugging the watchman query
		# open (my $fh, ">", ".git/watchman-query.json");
		# print $fh $query;
		# close $fh;
	
		print CHLD_IN $query;
		close CHLD_IN;
		my $response = do {local $/; <CHLD_OUT>};
	
		# Uncomment for debugging the watch response
		# open ($fh, ">", ".git/watchman-response.json");
		# print $fh $response;
		# close $fh;
	
		die "Watchman: command returned no output.\n" .
		"Falling back to scanning...\n" if $response eq "";
		die "Watchman: command returned invalid output: $response\n" .
		"Falling back to scanning...\n" unless $response =~ /^\{/;
	
		return $json_pkg->new->utf8->decode($response);
	}
	
	sub is_work_tree_watched {
		my ($output) = @_;
		my $error = $output->{error};
		if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
			$retry--;
			my $response = qx/watchman watch "$git_work_tree"/;
			die "Failed to make watchman watch '$git_work_tree'.\n" .
			    "Falling back to scanning...\n" if $? != 0;
			$output = $json_pkg->new->utf8->decode($response);
			$error = $output->{error};
			die "Watchman: $error.\n" .
			"Falling back to scanning...\n" if $error;
	
			# Uncomment for debugging watchman output
			# open (my $fh, ">", ".git/watchman-output.out");
			# close $fh;
	
			# Watchman will always return all files on the first query so
			# return the fast "everything is dirty" flag to git and do the
			# Watchman query just to get it over with now so we won't pay
			# the cost in git to look up each individual file.
			my $o = watchman_clock();
			$error = $output->{error};
	
			die "Watchman: $error.\n" .
			"Falling back to scanning...\n" if $error;
	
			output_result($o->{clock}, ("/"));
			$last_update_token = $o->{clock};
	
			eval { launch_watchman() };
			return 0;
		}
	
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;
	
		return 1;
	}
	
	sub get_working_dir {
		my $working_dir;
		if ($^O =~ 'msys' || $^O =~ 'cygwin') {
			$working_dir = Win32::GetCwd();
			$working_dir =~ tr/\\/\//;
		} else {
			require Cwd;
			$working_dir = Cwd::cwd();
		}
	
		return $working_dir;
	}



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\post-update.sample]

	#!/bin/sh
	#
	# An example hook script to prepare a packed repository for use over
	# dumb transports.
	#
	# To enable this hook, rename this file to "post-update".
	
	exec git update-server-info



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\pre-applypatch.sample]

	#!/bin/sh
	#
	# An example hook script to verify what is about to be committed
	# by applypatch from an e-mail message.
	#
	# The hook should exit with non-zero status after issuing an
	# appropriate message if it wants to stop the commit.
	#
	# To enable this hook, rename this file to "pre-applypatch".
	
	. git-sh-setup
	precommit="$(git rev-parse --git-path hooks/pre-commit)"
	test -x "$precommit" && exec "$precommit" ${1+"$@"}
	:



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\pre-commit.sample]

	#!/bin/sh
	#
	# An example hook script to verify what is about to be committed.
	# Called by "git commit" with no arguments.  The hook should
	# exit with non-zero status after issuing an appropriate message if
	# it wants to stop the commit.
	#
	# To enable this hook, rename this file to "pre-commit".
	
	if git rev-parse --verify HEAD >/dev/null 2>&1
	then
		against=HEAD
	else
		# Initial commit: diff against an empty tree object
		against=$(git hash-object -t tree /dev/null)
	fi
	
	# If you want to allow non-ASCII filenames set this variable to true.
	allownonascii=$(git config --type=bool hooks.allownonascii)
	
	# Redirect output to stderr.
	exec 1>&2
	
	# Cross platform projects tend to avoid non-ASCII filenames; prevent
	# them from being added to the repository. We exploit the fact that the
	# printable range starts at the space character and ends with tilde.
	if [ "$allownonascii" != "true" ] &&
		# Note that the use of brackets around a tr range is ok here, (it's
		# even required, for portability to Solaris 10's /usr/bin/tr), since
		# the square bracket bytes happen to fall in the designated range.
		test $(git diff-index --cached --name-only --diff-filter=A -z $against |
		  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
	then
		cat <<\EOF
	Error: Attempt to add a non-ASCII file name.
	
	This can cause problems if you want to work with people on other platforms.
	
	To be portable it is advisable to rename the file.
	
	If you know what you are doing you can disable this check using:
	
	  git config hooks.allownonascii true
	EOF
		exit 1
	fi
	
	# If there are whitespace errors, print the offending file names and fail.
	exec git diff-index --check --cached $against --



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\pre-merge-commit.sample]

	#!/bin/sh
	#
	# An example hook script to verify what is about to be committed.
	# Called by "git merge" with no arguments.  The hook should
	# exit with non-zero status after issuing an appropriate message to
	# stderr if it wants to stop the merge commit.
	#
	# To enable this hook, rename this file to "pre-merge-commit".
	
	. git-sh-setup
	test -x "$GIT_DIR/hooks/pre-commit" &&
	        exec "$GIT_DIR/hooks/pre-commit"
	:



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\pre-push.sample]

	#!/bin/sh
	
	# An example hook script to verify what is about to be pushed.  Called by "git
	# push" after it has checked the remote status, but before anything has been
	# pushed.  If this script exits with a non-zero status nothing will be pushed.
	#
	# This hook is called with the following parameters:
	#
	# $1 -- Name of the remote to which the push is being done
	# $2 -- URL to which the push is being done
	#
	# If pushing without using a named remote those arguments will be equal.
	#
	# Information about the commits which are being pushed is supplied as lines to
	# the standard input in the form:
	#
	#   <local ref> <local oid> <remote ref> <remote oid>
	#
	# This sample shows how to prevent push of commits where the log message starts
	# with "WIP" (work in progress).
	
	remote="$1"
	url="$2"
	
	zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
	
	while read local_ref local_oid remote_ref remote_oid
	do
		if test "$local_oid" = "$zero"
		then
			# Handle delete
			:
		else
			if test "$remote_oid" = "$zero"
			then
				# New branch, examine all commits
				range="$local_oid"
			else
				# Update to existing branch, examine new commits
				range="$remote_oid..$local_oid"
			fi
	
			# Check for WIP commit
			commit=$(git rev-list -n 1 --grep '^WIP' "$range")
			if test -n "$commit"
			then
				echo >&2 "Found WIP commit in $local_ref, not pushing"
				exit 1
			fi
		fi
	done
	
	exit 0



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\pre-rebase.sample]

	#!/bin/sh
	#
	# Copyright (c) 2006, 2008 Junio C Hamano
	#
	# The "pre-rebase" hook is run just before "git rebase" starts doing
	# its job, and can prevent the command from running by exiting with
	# non-zero status.
	#
	# The hook is called with the following parameters:
	#
	# $1 -- the upstream the series was forked from.
	# $2 -- the branch being rebased (or empty when rebasing the current branch).
	#
	# This sample shows how to prevent topic branches that are already
	# merged to 'next' branch from getting rebased, because allowing it
	# would result in rebasing already published history.
	
	publish=next
	basebranch="$1"
	if test "$#" = 2
	then
		topic="refs/heads/$2"
	else
		topic=`git symbolic-ref HEAD` ||
		exit 0 ;# we do not interrupt rebasing detached HEAD
	fi
	
	case "$topic" in
	refs/heads/??/*)
		;;
	*)
		exit 0 ;# we do not interrupt others.
		;;
	esac
	
	# Now we are dealing with a topic branch being rebased
	# on top of master.  Is it OK to rebase it?
	
	# Does the topic really exist?
	git show-ref -q "$topic" || {
		echo >&2 "No such branch $topic"
		exit 1
	}
	
	# Is topic fully merged to master?
	not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
	if test -z "$not_in_master"
	then
		echo >&2 "$topic is fully merged to master; better remove it."
		exit 1 ;# we could allow it, but there is no point.
	fi
	
	# Is topic ever merged to next?  If so you should not be rebasing it.
	only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
	only_next_2=`git rev-list ^master           ${publish} | sort`
	if test "$only_next_1" = "$only_next_2"
	then
		not_in_topic=`git rev-list "^$topic" master`
		if test -z "$not_in_topic"
		then
			echo >&2 "$topic is already up to date with master"
			exit 1 ;# we could allow it, but there is no point.
		else
			exit 0
		fi
	else
		not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
		/usr/bin/perl -e '
			my $topic = $ARGV[0];
			my $msg = "* $topic has commits already merged to public branch:\n";
			my (%not_in_next) = map {
				/^([0-9a-f]+) /;
				($1 => 1);
			} split(/\n/, $ARGV[1]);
			for my $elem (map {
					/^([0-9a-f]+) (.*)$/;
					[$1 => $2];
				} split(/\n/, $ARGV[2])) {
				if (!exists $not_in_next{$elem->[0]}) {
					if ($msg) {
						print STDERR $msg;
						undef $msg;
					}
					print STDERR " $elem->[1]\n";
				}
			}
		' "$topic" "$not_in_next" "$not_in_master"
		exit 1
	fi
	
	<<\DOC_END
	
	This sample hook safeguards topic branches that have been
	published from being rewound.
	
	The workflow assumed here is:
	
	 * Once a topic branch forks from "master", "master" is never
	   merged into it again (either directly or indirectly).
	
	 * Once a topic branch is fully cooked and merged into "master",
	   it is deleted.  If you need to build on top of it to correct
	   earlier mistakes, a new topic branch is created by forking at
	   the tip of the "master".  This is not strictly necessary, but
	   it makes it easier to keep your history simple.
	
	 * Whenever you need to test or publish your changes to topic
	   branches, merge them into "next" branch.
	
	The script, being an example, hardcodes the publish branch name
	to be "next", but it is trivial to make it configurable via
	$GIT_DIR/config mechanism.
	
	With this workflow, you would want to know:
	
	(1) ... if a topic branch has ever been merged to "next".  Young
	    topic branches can have stupid mistakes you would rather
	    clean up before publishing, and things that have not been
	    merged into other branches can be easily rebased without
	    affecting other people.  But once it is published, you would
	    not want to rewind it.
	
	(2) ... if a topic branch has been fully merged to "master".
	    Then you can delete it.  More importantly, you should not
	    build on top of it -- other people may already want to
	    change things related to the topic as patches against your
	    "master", so if you need further changes, it is better to
	    fork the topic (perhaps with the same name) afresh from the
	    tip of "master".
	
	Let's look at this example:
	
			   o---o---o---o---o---o---o---o---o---o "next"
			  /       /           /           /
			 /   a---a---b A     /           /
			/   /               /           /
		       /   /   c---c---c---c B         /
		      /   /   /             \         /
		     /   /   /   b---b C     \       /
		    /   /   /   /             \     /
	    ---o---o---o---o---o---o---o---o---o---o---o "master"
	
	
	A, B and C are topic branches.
	
	 * A has one fix since it was merged up to "next".
	
	 * B has finished.  It has been fully merged up to "master" and "next",
	   and is ready to be deleted.
	
	 * C has not merged to "next" at all.
	
	We would want to allow C to be rebased, refuse A, and encourage
	B to be deleted.
	
	To compute (1):
	
		git rev-list ^master ^topic next
		git rev-list ^master        next
	
		if these match, topic has not merged in next at all.
	
	To compute (2):
	
		git rev-list master..topic
	
		if this is empty, it is fully merged to "master".
	
	DOC_END



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\pre-receive.sample]

	#!/bin/sh
	#
	# An example hook script to make use of push options.
	# The example simply echoes all push options that start with 'echoback='
	# and rejects all pushes when the "reject" push option is used.
	#
	# To enable this hook, rename this file to "pre-receive".
	
	if test -n "$GIT_PUSH_OPTION_COUNT"
	then
		i=0
		while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
		do
			eval "value=\$GIT_PUSH_OPTION_$i"
			case "$value" in
			echoback=*)
				echo "echo from the pre-receive-hook: ${value#*=}" >&2
				;;
			reject)
				exit 1
			esac
			i=$((i + 1))
		done
	fi



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\prepare-commit-msg.sample]

	#!/bin/sh
	#
	# An example hook script to prepare the commit log message.
	# Called by "git commit" with the name of the file that has the
	# commit message, followed by the description of the commit
	# message's source.  The hook's purpose is to edit the commit
	# message file.  If the hook fails with a non-zero status,
	# the commit is aborted.
	#
	# To enable this hook, rename this file to "prepare-commit-msg".
	
	# This hook includes three examples. The first one removes the
	# "# Please enter the commit message..." help message.
	#
	# The second includes the output of "git diff --name-status -r"
	# into the message, just before the "git status" output.  It is
	# commented because it doesn't cope with --amend or with squashed
	# commits.
	#
	# The third example adds a Signed-off-by line to the message, that can
	# still be edited.  This is rarely a good idea.
	
	COMMIT_MSG_FILE=$1
	COMMIT_SOURCE=$2
	SHA1=$3
	
	/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"
	
	# case "$COMMIT_SOURCE,$SHA1" in
	#  ,|template,)
	#    /usr/bin/perl -i.bak -pe '
	#       print "\n" . `git diff --cached --name-status -r`
	# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
	#  *) ;;
	# esac
	
	# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
	# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
	# if test -z "$COMMIT_SOURCE"
	# then
	#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
	# fi



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\push-to-checkout.sample]

	#!/bin/sh
	
	# An example hook script to update a checked-out tree on a git push.
	#
	# This hook is invoked by git-receive-pack(1) when it reacts to git
	# push and updates reference(s) in its repository, and when the push
	# tries to update the branch that is currently checked out and the
	# receive.denyCurrentBranch configuration variable is set to
	# updateInstead.
	#
	# By default, such a push is refused if the working tree and the index
	# of the remote repository has any difference from the currently
	# checked out commit; when both the working tree and the index match
	# the current commit, they are updated to match the newly pushed tip
	# of the branch. This hook is to be used to override the default
	# behaviour; however the code below reimplements the default behaviour
	# as a starting point for convenient modification.
	#
	# The hook receives the commit with which the tip of the current
	# branch is going to be updated:
	commit=$1
	
	# It can exit with a non-zero status to refuse the push (when it does
	# so, it must not modify the index or the working tree).
	die () {
		echo >&2 "$*"
		exit 1
	}
	
	# Or it can make any necessary changes to the working tree and to the
	# index to bring them to the desired state when the tip of the current
	# branch is updated to the new commit, and exit with a zero status.
	#
	# For example, the hook can simply run git read-tree -u -m HEAD "$1"
	# in order to emulate git fetch that is run in the reverse direction
	# with git push, as the two-tree form of git read-tree -u -m is
	# essentially the same as git switch or git checkout that switches
	# branches while keeping the local changes in the working tree that do
	# not interfere with the difference between the branches.
	
	# The below is a more-or-less exact translation to shell of the C code
	# for the default behaviour for git's push-to-checkout hook defined in
	# the push_to_deploy() function in builtin/receive-pack.c.
	#
	# Note that the hook will be executed from the repository directory,
	# not from the working tree, so if you want to perform operations on
	# the working tree, you will have to adapt your code accordingly, e.g.
	# by adding "cd .." or using relative paths.
	
	if ! git update-index -q --ignore-submodules --refresh
	then
		die "Up-to-date check failed"
	fi
	
	if ! git diff-files --quiet --ignore-submodules --
	then
		die "Working directory has unstaged changes"
	fi
	
	# This is a rough translation of:
	#
	#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
	if git cat-file -e HEAD 2>/dev/null
	then
		head=HEAD
	else
		head=$(git hash-object -t tree --stdin </dev/null)
	fi
	
	if ! git diff-index --quiet --cached --ignore-submodules $head --
	then
		die "Working directory has staged changes"
	fi
	
	if ! git read-tree -u -m "$commit"
	then
		die "Could not update working tree to new HEAD"
	fi



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\sendemail-validate.sample]

	#!/bin/sh
	
	# An example hook script to validate a patch (and/or patch series) before
	# sending it via email.
	#
	# The hook should exit with non-zero status after issuing an appropriate
	# message if it wants to prevent the email(s) from being sent.
	#
	# To enable this hook, rename this file to "sendemail-validate".
	#
	# By default, it will only check that the patch(es) can be applied on top of
	# the default upstream branch without conflicts in a secondary worktree. After
	# validation (successful or not) of the last patch of a series, the worktree
	# will be deleted.
	#
	# The following config variables can be set to change the default remote and
	# remote ref that are used to apply the patches against:
	#
	#   sendemail.validateRemote (default: origin)
	#   sendemail.validateRemoteRef (default: HEAD)
	#
	# Replace the TODO placeholders with appropriate checks according to your
	# needs.
	
	validate_cover_letter () {
		file="$1"
		# TODO: Replace with appropriate checks (e.g. spell checking).
		true
	}
	
	validate_patch () {
		file="$1"
		# Ensure that the patch applies without conflicts.
		git am -3 "$file" || return
		# TODO: Replace with appropriate checks for this patch
		# (e.g. checkpatch.pl).
		true
	}
	
	validate_series () {
		# TODO: Replace with appropriate checks for the whole series
		# (e.g. quick build, coding style checks, etc.).
		true
	}
	
	# main -------------------------------------------------------------------------
	
	if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
	then
		remote=$(git config --default origin --get sendemail.validateRemote) &&
		ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
		worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
		git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
		git config --replace-all sendemail.validateWorktree "$worktree"
	else
		worktree=$(git config --get sendemail.validateWorktree)
	fi || {
		echo "sendemail-validate: error: failed to prepare worktree" >&2
		exit 1
	}
	
	unset GIT_DIR GIT_WORK_TREE
	cd "$worktree" &&
	
	if grep -q "^diff --git " "$1"
	then
		validate_patch "$1"
	else
		validate_cover_letter "$1"
	fi &&
	
	if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
	then
		git config --unset-all sendemail.validateWorktree &&
		trap 'git worktree remove -ff "$worktree"' EXIT &&
		validate_series
	fi



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\hooks\update.sample]

	#!/bin/sh
	#
	# An example hook script to block unannotated tags from entering.
	# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
	#
	# To enable this hook, rename this file to "update".
	#
	# Config
	# ------
	# hooks.allowunannotated
	#   This boolean sets whether unannotated tags will be allowed into the
	#   repository.  By default they won't be.
	# hooks.allowdeletetag
	#   This boolean sets whether deleting tags will be allowed in the
	#   repository.  By default they won't be.
	# hooks.allowmodifytag
	#   This boolean sets whether a tag may be modified after creation. By default
	#   it won't be.
	# hooks.allowdeletebranch
	#   This boolean sets whether deleting branches will be allowed in the
	#   repository.  By default they won't be.
	# hooks.denycreatebranch
	#   This boolean sets whether remotely creating branches will be denied
	#   in the repository.  By default this is allowed.
	#
	
	# --- Command line
	refname="$1"
	oldrev="$2"
	newrev="$3"
	
	# --- Safety check
	if [ -z "$GIT_DIR" ]; then
		echo "Don't run this script from the command line." >&2
		echo " (if you want, you could supply GIT_DIR then run" >&2
		echo "  $0 <ref> <oldrev> <newrev>)" >&2
		exit 1
	fi
	
	if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
		echo "usage: $0 <ref> <oldrev> <newrev>" >&2
		exit 1
	fi
	
	# --- Config
	allowunannotated=$(git config --type=bool hooks.allowunannotated)
	allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
	denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
	allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
	allowmodifytag=$(git config --type=bool hooks.allowmodifytag)
	
	# check for no description
	projectdesc=$(sed -e '1q' "$GIT_DIR/description")
	case "$projectdesc" in
	"Unnamed repository"* | "")
		echo "*** Project description file hasn't been set" >&2
		exit 1
		;;
	esac
	
	# --- Check types
	# if $newrev is 0000...0000, it's a commit to delete a ref.
	zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
	if [ "$newrev" = "$zero" ]; then
		newrev_type=delete
	else
		newrev_type=$(git cat-file -t $newrev)
	fi
	
	case "$refname","$newrev_type" in
		refs/tags/*,commit)
			# un-annotated tag
			short_refname=${refname##refs/tags/}
			if [ "$allowunannotated" != "true" ]; then
				echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
				echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
				exit 1
			fi
			;;
		refs/tags/*,delete)
			# delete tag
			if [ "$allowdeletetag" != "true" ]; then
				echo "*** Deleting a tag is not allowed in this repository" >&2
				exit 1
			fi
			;;
		refs/tags/*,tag)
			# annotated tag
			if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
			then
				echo "*** Tag '$refname' already exists." >&2
				echo "*** Modifying a tag is not allowed in this repository." >&2
				exit 1
			fi
			;;
		refs/heads/*,commit)
			# branch
			if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
				echo "*** Creating a branch is not allowed in this repository" >&2
				exit 1
			fi
			;;
		refs/heads/*,delete)
			# delete branch
			if [ "$allowdeletebranch" != "true" ]; then
				echo "*** Deleting a branch is not allowed in this repository" >&2
				exit 1
			fi
			;;
		refs/remotes/*,commit)
			# tracking branch
			;;
		refs/remotes/*,delete)
			# delete tracking branch
			if [ "$allowdeletebranch" != "true" ]; then
				echo "*** Deleting a tracking branch is not allowed in this repository" >&2
				exit 1
			fi
			;;
		*)
			# Anything else (is there anything else?)
			echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
			exit 1
			;;
	esac
	
	# --- Finished
	exit 0



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\info\exclude]

	# git ls-files --others --exclude-from=.git/info/exclude
	# Lines that start with '#' are comments.
	# For a project mostly in C, the following would be a good set of
	# exclude patterns (uncomment them if you want to use them):
	# *.[oa]
	# *~



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\logs\HEAD]

	0000000000000000000000000000000000000000 9ba906a138b2ceff3b02f13536c39876629203b6 nngkhyt <nonogaki.hayato1999@gmail.com> 1717312807 +0900	clone: from https://github.com/nngkhyt/nngkhyt.github.io.git
	9ba906a138b2ceff3b02f13536c39876629203b6 efc14a79a401f4307697ba42bcf51fe569656486 nngkhyt <nonogaki.hayato1999@gmail.com> 1717312873 +0900	commit: Initial commit
	efc14a79a401f4307697ba42bcf51fe569656486 5e79a3460899b9a05fa062298bcf183d5e752fdc nngkhyt <nonogaki.hayato1999@gmail.com> 1717312912 +0900	commit (amend): upload original files



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\logs\refs\heads\main]

	0000000000000000000000000000000000000000 9ba906a138b2ceff3b02f13536c39876629203b6 nngkhyt <nonogaki.hayato1999@gmail.com> 1717312807 +0900	clone: from https://github.com/nngkhyt/nngkhyt.github.io.git
	9ba906a138b2ceff3b02f13536c39876629203b6 efc14a79a401f4307697ba42bcf51fe569656486 nngkhyt <nonogaki.hayato1999@gmail.com> 1717312873 +0900	commit: Initial commit
	efc14a79a401f4307697ba42bcf51fe569656486 5e79a3460899b9a05fa062298bcf183d5e752fdc nngkhyt <nonogaki.hayato1999@gmail.com> 1717312912 +0900	commit (amend): upload original files



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\logs\refs\remotes\origin\HEAD]

	0000000000000000000000000000000000000000 9ba906a138b2ceff3b02f13536c39876629203b6 nngkhyt <nonogaki.hayato1999@gmail.com> 1717312807 +0900	clone: from https://github.com/nngkhyt/nngkhyt.github.io.git



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\logs\refs\remotes\origin\main]

	9ba906a138b2ceff3b02f13536c39876629203b6 5e79a3460899b9a05fa062298bcf183d5e752fdc nngkhyt <nonogaki.hayato1999@gmail.com> 1717312926 +0900	update by push



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\refs\heads\main]

	5e79a3460899b9a05fa062298bcf183d5e752fdc



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\refs\remotes\origin\HEAD]

	ref: refs/remotes/origin/main



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\.git\refs\remotes\origin\main]

	5e79a3460899b9a05fa062298bcf183d5e752fdc



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\css\styles.css]

	body {
	    font-family: Arial, sans-serif;
	    background-color: #f8f9fa;
	    color: #343a40;
	}
	
	header {
	    margin-bottom: 20px;
	}
	
	.hero {
	    background: url('../images/hero/odaiba_TOKYO.jpg') no-repeat center center;
	    background-size: cover;
	    color: #fff;
	    padding: 50px 0; 
	    position: relative;
	}
	
	.hero::before {
	    content: '';
	    position: absolute;
	    top: 0;
	    left: 0;
	    width: 100%;
	    height: 100%;
	    background: rgba(0, 0, 0, 0.5); /* Dark overlay for better text visibility */
	}
	
	.hero .container {
	    position: relative;
	    z-index: 1;
	}
	
	
	footer {
	    margin-top: 20px;
	}
	
	.card {
	    border: none;
	    border-radius: 10px;
	    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
	}
	
	.card .card-title {
	    font-weight: bold;
	}
	
	.news-details {
	    border-top: 1px solid #ccc;
	    padding-top: 20px;
	}
	
	.news-item {
	    display: block;
	}
	
	.badge {
	    margin-right: 5px;
	}
	
	.list-group-item {
	    background: #fff;
	    border: none;
	    margin-bottom: 5px;
	    padding: 15px 20px;
	    border-radius: 5px;
	    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
	}
	
	.btn-outline-secondary, .btn-primary {
	    color: #fff;
	    background-color: #007bff;
	    border-color: #007bff;
	}
	
	.btn-outline-secondary:hover, .btn-primary:hover {
	    color: #fff;
	    background-color: #0056b3;
	    border-color: #0056b3;
	}
	
	img.rounded-circle {
	    border: 5px solid #fff;
	    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
	}
	
	.section-title {
	    text-align: center;
	    margin-bottom: 30px;
	    font-size: 1.75rem;
	    color: #343a40;
	}



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\js\scripts.js]

	function filterNewsByTag(tag) {
	    var newsItems = document.querySelectorAll('.news-item');
	    newsItems.forEach(function(item) {
	        if (tag === 'All' || item.getAttribute('data-tags').includes(tag)) {
	            item.style.display = 'block';
	        } else {
	            item.style.display = 'none';
	        }
	    });
	}
	
	function filterNewsByDate(date) {
	    var newsItems = document.querySelectorAll('.news-item');
	    newsItems.forEach(function(item) {
	        if (item.getAttribute('data-date').startsWith(date)) {
	            item.style.display = 'block';
	        } else {
	            item.style.display = 'none';
	        }
	    });
	}



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\news\news_1.html]

	<!DOCTYPE html>
	<html lang="ja">
	<head>
	    <meta charset="UTF-8">
	    <meta name="viewport" content="width=device-width, initial-scale=1.0">
	    <title>News 1</title>
	    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
	    <link rel="stylesheet" href="../css/styles.css">
	</head>
	<body>
	    <header class="bg-dark text-white text-center py-3">
	        <h1>News 1</h1>
	        <nav>
	            <ul class="nav justify-content-center">
	                <li class="nav-item"><a class="nav-link text-white" href="../index.html">Home</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="../news.html">News</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="../profile.html">Profile</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="../links.html">Link</a></li>
	            </ul>
	        </nav>
	    </header>
	    <section class="news-details py-5">
	        <div class="container">
	            <h2>News 1 Title</h2>
	            <p>Date: 2024-06-02</p>
	            <p>Details about news 1...</p>
	            <p>Tags: <span class="badge badge-secondary">Tag1</span> <span class="badge badge-secondary">Tag2</span></p>
	        </div>
	    </section>
	    <footer class="bg-dark text-white text-center py-3">
	        <p>&copy; 2024 My Static Website</p>
	    </footer>
	    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
	    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
	    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
	</body>
	</html>



[C:\Users\Nonog\Documents\MyPortfolio\nngkhyt.github.io\news\news_2.html]

	<!DOCTYPE html>
	<html lang="ja">
	<head>
	    <meta charset="UTF-8">
	    <meta name="viewport" content="width=device-width, initial-scale=1.0">
	    <title>News 2</title>
	    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
	    <link rel="stylesheet" href="../css/styles.css">
	</head>
	<body>
	    <header class="bg-dark text-white text-center py-3">
	        <h1>News 2</h1>
	        <nav>
	            <ul class="nav justify-content-center">
	                <li class="nav-item"><a class="nav-link text-white" href="../index.html">Home</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="../news.html">News</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="../profile.html">Profile</a></li>
	                <li class="nav-item"><a class="nav-link text-white" href="../links.html">Link</a></li>
	            </ul>
	        </nav>
	    </header>
	    <section class="news-details py-5">
	        <div class="container">
	            <h2>News 2 Title</h2>
	            <p>Date: 2024-06-02</p>
	            <p>Details about news 2...</p>
	            <p>Tags: <span class="badge badge-secondary">Tag1</span> <span class="badge badge-secondary">Tag3</span></p>
	        </div>
	    </section>
	    <footer class="bg-dark text-white text-center py-3">
	        <p>&copy; 2024 My Static Website</p>
	    </footer>
	    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
	    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
	    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
	</body>
	</html>



